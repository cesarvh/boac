#
# Apache configuration files and keys.
#
files:
  # Proxy SSL connections to port 80
  /etc/httpd/conf.d/ssl.conf:
    mode: '000644'
    owner: root
    group: root
    content: |
      WSGIPythonHome /opt/python/run/baselinenv
      WSGISocketPrefix run/wsgi
      WSGIRestrictEmbedded On

      # Redirect http to https.
      RewriteEngine On
      <If "-n '%{HTTP:X-Forwarded-Proto}' && %{HTTP:X-Forwarded-Proto} != 'https'">
        RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R,L]
      </If>

      Listen 443

      <VirtualHost *:443>
        <IfModule !deflate_module>
          LoadModule deflate_module /etc/httpd/modules/mod_deflate.so
        </IfModule>

        SSLEngine on
        SSLCertificateFile "/etc/pki/tls/certs/boac_openssl_x509.crt"
        SSLCertificateKeyFile "/etc/pki/tls/certs/boac_openssl_private.key"

        Alias /static/ /opt/python/current/app/dist/static/
        <Directory /opt/python/current/app/dist/static>
          Order allow,deny
          Allow from all
        </Directory>

        SetOutputFilter DEFLATE
        AddOutputFilterByType DEFLATE application/javascript
        AddOutputFilterByType DEFLATE application/json
        AddOutputFilterByType DEFLATE application/rss+xml
        AddOutputFilterByType DEFLATE application/x-javascript
        AddOutputFilterByType DEFLATE application/xhtml+xml
        AddOutputFilterByType DEFLATE application/xml
        AddOutputFilterByType DEFLATE image/svg+xml
        AddOutputFilterByType DEFLATE image/x-icon
        AddOutputFilterByType DEFLATE text/css
        AddOutputFilterByType DEFLATE text/html
        AddOutputFilterByType DEFLATE text/javascript
        AddOutputFilterByType DEFLATE text/plain
        AddOutputFilterByType DEFLATE text/xml

        <FilesMatch "\.(ico|jpg|jpeg|png|gif|js|css|swf|svg)$">
          Header set Cache-Control "max-age=604800, public"
        </FilesMatch>

        WSGIScriptAlias / /opt/python/current/app/run.py
        WSGIApplicationGroup %{GLOBAL}

        <Directory /opt/python/current/app>
          Require all granted
        </Directory>

        WSGIDaemonProcess wsgi-ssl processes=10 threads=100 display-name=%{GROUP} \
          home=/opt/python/current/app \
          user=wsgi \
          group=wsgi
        WSGIProcessGroup wsgi-ssl

        ErrorDocument 502 /static/app/splash/outage.html
        ErrorDocument 503 /static/app/splash/outage.html
        ErrorDocument 504 /static/app/splash/outage.html

        LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
        LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined-forwarded
        SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded
        CustomLog "logs/access_log" combined env=!forwarded
        CustomLog "logs/access_log" combined-forwarded env=forwarded
        ErrorLogFormat "[%{u}t] [%-m:%l] [pid %P:tid %T] %7F: %E: [client\ %{X-Forwarded-For}i] %M% ,\ referer\ %{Referer}i"

      </VirtualHost>

  # Load-balancer expects this SSL certificate on EC2 instances.
  /etc/pki/tls/certs/boac_openssl_x509.crt:
    mode: '000400'
    owner: root
    group: root
    content: |
      -----BEGIN CERTIFICATE-----
      MIIEQDCCAygCCQCPSf6sgqf0ZTANBgkqhkiG9w0BAQsFADCB4TELMAkGA1UEBhMC
      VVMxEzARBgNVBAgMCkNhbGlmb3JuaWExETAPBgNVBAcMCEJlcmtlbGV5MSswKQYD
      VQQKDCJVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEsIEJlcmtlbGV5MSkwJwYDVQQL
      DCBSZXNlYXJjaCwgVGVhY2hpbmcsIGFuZCBMZWFybmluZzEnMCUGA1UEAwweYXBw
      LXByb2QuZXRzLWJlcmtlbGV5LWJvYWMubmV0MSkwJwYJKoZIhvcNAQkBFhpldHMt
      b3BzQG1lZGlhLmJlcmtlbGV5LmVkdTAeFw0xOTEwMDMyMDA1MjdaFw0yMDExMDEy
      MDA1MjdaMIHhMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTERMA8G
      A1UEBwwIQmVya2VsZXkxKzApBgNVBAoMIlVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5p
      YSwgQmVya2VsZXkxKTAnBgNVBAsMIFJlc2VhcmNoLCBUZWFjaGluZywgYW5kIExl
      YXJuaW5nMScwJQYDVQQDDB5hcHAtcHJvZC5ldHMtYmVya2VsZXktYm9hYy5uZXQx
      KTAnBgkqhkiG9w0BCQEWGmV0cy1vcHNAbWVkaWEuYmVya2VsZXkuZWR1MIIBIjAN
      BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsQR3kMWR1Orkz88hg8J+GcePwsvj
      NjPETewQLVKxFeXb4xZaDRtu9jA1STJGXavIhtpXfwQyK9PwT6wHSWnVXXCO2UMJ
      OoQ9CHC8sw3HQJHMZJkFiBdpy1ApzhzreEfurCubAwAhjpEmZBgRKo5rPatejSVe
      EoZWJPBDJSTYypxWUm0wnoI4ph2v1kpDYto0L65jKL0XdO04Gva63lmgJCI6H0x7
      eBTYgiRNgLtfYgM8HyHe7JUJgqXsr9kNxHxIq7vEWVvD3BzRaSn3gL7U0Wwxy6/T
      QUXMo3Sq3dv4YhIPPEMQPKuQJBjr45QXlJPmHy0qZivZqdpZf3rogbRhxQIDAQAB
      MA0GCSqGSIb3DQEBCwUAA4IBAQAmODXXxkJEwA/7H7LAWft7sr6l4Bq4LfyiPhHK
      pe/yj88t0YYd2NX+80y2e5Ro0+BXNFKAQ8NPIzPI/WEbSOLhFtAS1V3mMMASHaP5
      wFDnko+U13AN2YeIYqYiOzacG6rarl30LGt4fWO1+FZ7Kcz4wISg2tmtMwKRpGyu
      MO7NxQjBfxxChRSE6q04nh7M9Ore0B0tcvXj7ikum3t8zSWdLXL9iJW1v5SeAbp9
      K7j+2w00qoTjl8cpFtXI1Xajh8iuQ501YnPou7kdIzRc9bWFgqsM1KC3oxNd+EeV
      A7Jb9fXz16YzMD1WauS6mzPUF2N8Y7aBq+HBnKqMKso6Wiqm
      -----END CERTIFICATE-----

  # Get the private key matching the certificate.
  /etc/pki/tls/certs/boac_openssl_private.key:
    mode: '000400'
    owner: root
    group: root
    authentication: "S3Auth"
    source: https://s3-us-west-2.amazonaws.com/la-deploy-configs/shared/certificate/boac-self-signed-2020.key

container_commands:
  01_overwrite_wsgi_conf:
    command:
      echo '# See ssl.conf for WSGI configuration.' > /opt/python/ondeck/wsgi.conf
